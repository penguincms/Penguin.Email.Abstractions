<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Penguin.Email.Abstractions</name>
    </assembly>
    <members>
        <member name="M:Penguin.Email.Abstractions.Extensions.IQueueAndSendMailExtensions.TryQueueAndSend(Penguin.Email.Abstractions.Interfaces.IQueueAndSendMail,Penguin.Email.Abstractions.Interfaces.IEmailMessage)">
            <summary>
            Sends the email immediately and inserts it into a database in the "Sent" state for record
            </summary>
            <param name="message">The message to send and queue</param>
        </member>
        <member name="M:Penguin.Email.Abstractions.Extensions.IQueueAndSendMailExtensions.TryQueueOrSend``1(Penguin.Email.Abstractions.Interfaces.IQueueAndSendMail,``0)">
            <summary>
            Performs the default action between Queue and Send
            </summary>
            <param name="message">The message to queue or send</param>
        </member>
        <member name="M:Penguin.Email.Abstractions.Extensions.IQueueAndSendMailExtensions.TryReQueueAndSend``1(Penguin.Email.Abstractions.Interfaces.IQueueAndSendMail,``0,System.String)">
            <summary>
            Copies the provided message and requeues it with an optional new recipient, marks it sent, and then immediately sends it
            </summary>
            <param name="message">The message to copy</param>
            <param name="newRecipient">If not null, the value will replace the former recipient</param>
        </member>
        <member name="T:Penguin.Email.Abstractions.Interfaces.IEmailHandler">
            <summary>
            Used to identify that a class contains methods that generate emails based on templates
            </summary>
        </member>
        <member name="T:Penguin.Email.Abstractions.Interfaces.IEmailMessage">
            <summary>
            An interface representing an email message to be used by the email services in the penguin stack
            </summary>
        </member>
        <member name="P:Penguin.Email.Abstractions.Interfaces.IEmailMessage.Attachments">
            <summary>
            An IEnumerable of IFile representing any attachments to be added to the message
            </summary>
        </member>
        <member name="P:Penguin.Email.Abstractions.Interfaces.IEmailMessage.BCCRecipients">
            <summary>
            An IEnumerable of BCC recipients
            </summary>
        </member>
        <member name="P:Penguin.Email.Abstractions.Interfaces.IEmailMessage.Body">
            <summary>
            The Body HTML of the email
            </summary>
        </member>
        <member name="P:Penguin.Email.Abstractions.Interfaces.IEmailMessage.CCRecipients">
            <summary>
            An IEnumerable of CC recipients
            </summary>
        </member>
        <member name="P:Penguin.Email.Abstractions.Interfaces.IEmailMessage.From">
            <summary>
            The account the email is coming from, to be used when using configurations for the sent email
            </summary>
        </member>
        <member name="P:Penguin.Email.Abstractions.Interfaces.IEmailMessage.IsHtml">
            <summary>
            Whether or not the Email contains HTML encoded content
            </summary>
        </member>
        <member name="P:Penguin.Email.Abstractions.Interfaces.IEmailMessage.Recipients">
            <summary>
            An IEnumerable of message recipients
            </summary>
        </member>
        <member name="P:Penguin.Email.Abstractions.Interfaces.IEmailMessage.Subject">
            <summary>
            The email subject
            </summary>
        </member>
        <member name="T:Penguin.Email.Abstractions.Interfaces.IQueueAndSendMail">
            <summary>
            Allows for immediate email sending as well as queuing for later
            </summary>
        </member>
        <member name="M:Penguin.Email.Abstractions.Interfaces.IQueueAndSendMail.QueueAndSend(Penguin.Email.Abstractions.Interfaces.IEmailMessage)">
            <summary>
            Sends the email immediately and inserts it into a database in the "Sent" state for record
            </summary>
            <param name="message">The message to send and queue</param>
        </member>
        <member name="M:Penguin.Email.Abstractions.Interfaces.IQueueAndSendMail.QueueOrSend(Penguin.Email.Abstractions.Interfaces.IEmailMessage)">
            <summary>
            Performs the default action between Queue and Send
            </summary>
            <param name="message">The message to queue or send</param>
        </member>
        <member name="M:Penguin.Email.Abstractions.Interfaces.IQueueAndSendMail.ReQueueAndSend(Penguin.Email.Abstractions.Interfaces.IEmailMessage,System.String)">
            <summary>
            Copies the provided message and requeues it with an optional new recipient, marks it sent, and then immediately sends it
            </summary>
            <param name="message">The message to copy</param>
            <param name="newRecipient">If not null, the value will replace the former recipient</param>
        </member>
        <member name="T:Penguin.Email.Abstractions.Interfaces.IQueueMail">
            <summary>
            Represents a class that can queue an email in data persistence for sending later
            </summary>
        </member>
        <member name="M:Penguin.Email.Abstractions.Interfaces.IQueueMail.Queue(Penguin.Email.Abstractions.Interfaces.IEmailMessage)">
            <summary>
            Queues the email to a database to be sent later
            </summary>
            <param name="message">The message to queue</param>
        </member>
        <member name="M:Penguin.Email.Abstractions.Interfaces.IQueueMail.ReQueue(Penguin.Email.Abstractions.Interfaces.IEmailMessage,System.String)">
            <summary>
            Copies the provided message and requeues it with an optional new recipient
            </summary>
            <param name="message">The message to copy</param>
            <param name="newRecipient">If not null, the value will replace the former recipient</param>
        </member>
        <member name="T:Penguin.Email.Abstractions.Interfaces.ISendMail">
            <summary>
            Represents an endpoint capable of sending an email message
            </summary>
        </member>
        <member name="M:Penguin.Email.Abstractions.Interfaces.ISendMail.Send(Penguin.Email.Abstractions.Interfaces.IEmailMessage)">
            <summary>
            The function that sends the email message
            </summary>
            <param name="message">the message to send</param>
        </member>
    </members>
</doc>